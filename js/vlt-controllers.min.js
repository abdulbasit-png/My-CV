(function (e) {
  "use strict";

  VLTJS.animatedBlock = {
    init: function () {
      e(".vlt-animated-block").each(function () {
        var t = e(this);
        VLTJS.window.on("vlt.change-slide", function () {
          t.removeClass("animated");
          if (t.parents(".vlt-section").hasClass("active")) {
            t.addClass("animated");
          }
        });
      });
    },
  };
  VLTJS.animatedBlock.init();
})(jQuery);

(function (e) {
  "use strict";

  VLTJS.contactForm = {
    init: function () {
      if (e.fn.validate) {
        e(".vlt-contact-form").each(function () {
          var t = e(this),
            successMessage = t.find(".message.success"),
            errorMessage = t.find(".message.danger");

          t.validate({
            errorClass: "error",
            submitHandler: function (form) {
              e.ajax({
                type: "POST",
                url: "handler.php",
                data: new FormData(form),
                cache: false,
                contentType: false,
                processData: false,
                success: function () {
                  successMessage.fadeIn();
                  setTimeout(function () {
                    successMessage.fadeOut();
                  }, 5000);
                },
                error: function () {
                  errorMessage.fadeIn();
                  setTimeout(function () {
                    errorMessage.fadeOut();
                  }, 5000);
                },
              });
            },
          });
        });
      }
    },
  };
  VLTJS.contactForm.init();
})(jQuery);

(function (e) {
  "use strict";

  VLTJS.customCursor = {
    init: function () {
      if (!VLTJS.isMobile.any() && e(".vlt-is--custom-cursor").length) {
        VLTJS.body.append(
          '<div class="vlt-custom-cursor"><div class="circle"><span></span></div></div>'
        );
        var cursor = e(".vlt-custom-cursor"),
          circle = cursor.find(".circle"),
          mousePos = { x: 0, y: 0 },
          cursorPos = { x: 0, y: 0 },
          speed = 0.25;

        if (typeof gsap !== "undefined") {
          gsap.set(circle, { xPercent: -50, yPercent: -50 });
          VLTJS.document.on("mousemove", function (e) {
            mousePos.x = e.pageX;
            mousePos.y = e.pageY;
          });

          gsap.ticker.add(function () {
            cursorPos.x += (mousePos.x - cursorPos.x) * speed;
            cursorPos.y += (mousePos.y - cursorPos.y) * speed;
            gsap.set(circle, { x: cursorPos.x, y: cursorPos.y });
          });

          VLTJS.document
            .on("mousedown", function () {
              gsap.to(circle, 0.3, { scale: 0.7 });
            })
            .on("mouseup", function () {
              gsap.to(circle, 0.3, { scale: 1 });
            });
        }
      }
    },
  };
  VLTJS.customCursor.init();
})(jQuery);

(function (e) {
  "use strict";

  VLTJS.fullpageSlider = {
    init: function () {
      if (e.fn.pagepiling) {
        var slider = e(".vlt-fullpage-slider"),
          speed = slider.data("speed") || 800;

        slider.pagepiling({
          scrollingSpeed: speed,
          sectionSelector: ".vlt-section",
          navigation: false,
          afterRender: function () {
            VLTJS.window.trigger("vlt.change-slide");
          },
          onLeave: function () {
            VLTJS.window.trigger("vlt.change-slide");
          },
        });
      }
    },
  };
  VLTJS.fullpageSlider.init();
})(jQuery);

(function (e) {
  "use strict";

  VLTJS.progressBar = {
    init: function () {
      if (typeof gsap !== "undefined") {
        e(".vlt-progress-bar").each(function () {
          var t = e(this),
            finalValue = t.data("final-value") || 0,
            animationSpeed = t.data("animation-speed") || 1000,
            delay = 500,
            progress = { count: 0 };

          VLTJS.window.on("vlt.change-slide", function () {
            if (t.parents(".vlt-section").hasClass("active")) {
              progress.count = 0;
              t.find(".vlt-progress-bar__title > .counter").text(0);
              gsap.set(t.find(".vlt-progress-bar__bar > span"), { width: 0 });
              gsap.to(progress, animationSpeed / 1000 / 2, {
                count: finalValue,
                delay: delay / 1000,
                onUpdate: function () {
                  t.find(".vlt-progress-bar__title > .counter").text(
                    Math.round(progress.count)
                  );
                },
              });
              gsap.to(
                t.find(".vlt-progress-bar__bar > span"),
                animationSpeed / 1000,
                {
                  width: finalValue + "%",
                  delay: delay / 1000,
                }
              );
            }
          });
        });
      }
    },
  };
  VLTJS.progressBar.init();
})(jQuery);
